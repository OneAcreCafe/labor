- day_span = days(@start_date, @end_date).count

#range
  = form_tag schedule_shifts_path, {method: 'get', class: 'form-inline', role: 'form'} do
    = label_tag 'Range to Display'
    .input-daterange
      = text_field :range, :start, data: { provide: :datepicker }, class: 'input-small'
      %span.add-on to
      = text_field :range, :end, data: { provide: :datepicker }, class: 'input-small'
    = submit_tag 'Filter', class: [:btn, 'btn-default']


- @tasks.find_each do |task|
  %table.schedule
    %thead
      %tr
        %th.task{ colspan: day_span + 1 }= task.name
      %tr
        %th
        - days(@start_date, @end_date).each do |day|
          %th{ style: "width: " + (100 / (day_span)).to_s + "%" }= day.strftime('%b %-d %Y')
    %tbody
      - shifts = Shift.where('start >= ? AND start < ? AND task_id = ?', @start_date, @end_date + 1.day, task)
      - if shifts.count == 0
        %tr
          %td.no-data{colspan: day_span + 1} No Shifts
      - else
        - shift_times = shifts.map{ |s| { start: s.start.hour + s.start.min / 60, span: s.span } }.uniq.sort_by{ |s| s[:start] }
        - by_hours = shifts.group_by{ |s| s.span }
        - shift_times.each do |times|
          %tr
            - hours = times[:span]
            %th.legend= hours
            - days(@start_date, @end_date).each do |day|
              %td
                %ul.workers
                  - by_hours[hours].collect{ |s| s.start.strftime('%Y/%m/%d') == day.strftime('%Y/%m/%d') ? s : nil }.compact.each do |shift|
                    - shift.workers.each do |worker|
                      - if worker == current_user or can? :read, User
                        %li= link_to worker.display_name, shift
                      - else
                        %li.taken= link_to '', shift
                    - (1 .. shift.needed).each do |x|
                      %li= link_to "\u00A0", shift

